// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eBus.WebAPI.Database;

namespace eBus.WebAPI.Migrations
{
    [DbContext(typeof(eBusContext))]
    [Migration("20210211131850_DB")]
    partial class DB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:Collation", "Bosnian_Latin_100_BIN")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("eBus.WebAPI.Database.Autobu", b =>
                {
                    b.Property<int>("AutobusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AutobusID")
                        .UseIdentityColumn();

                    b.Property<string>("Klasa")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("NazivAutobusa")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.Property<int?>("VozacId")
                        .HasColumnType("int")
                        .HasColumnName("VozacID");

                    b.HasKey("AutobusId")
                        .HasName("PK_AutobusID");

                    b.HasIndex("VozacId");

                    b.ToTable("Autobus");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.Drzava", b =>
                {
                    b.Property<int>("DrzavaId")
                        .HasColumnType("int")
                        .HasColumnName("DrzavaID");

                    b.Property<string>("NazivDrzave")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("DrzavaId");

                    b.ToTable("Drzava");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.Gradovi", b =>
                {
                    b.Property<int>("GradId")
                        .HasColumnType("int")
                        .HasColumnName("GradID");

                    b.Property<int?>("DrzavaId")
                        .HasColumnType("int")
                        .HasColumnName("DrzavaID");

                    b.Property<string>("NazivGrada")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("GradId")
                        .HasName("PK_GradiID");

                    b.HasIndex("DrzavaId");

                    b.ToTable("Gradovi");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.Kartum", b =>
                {
                    b.Property<int>("KartaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KartaID")
                        .UseIdentityColumn();

                    b.Property<string>("BrojKarte")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("DatumIzdavanja")
                        .HasColumnType("datetime");

                    b.Property<int?>("RezervacijaSjedistaId")
                        .HasColumnType("int")
                        .HasColumnName("RezervacijaSjedistaID");

                    b.Property<DateTime?>("VrijemeDolaska")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("VrijemePolaska")
                        .HasColumnType("datetime");

                    b.HasKey("KartaId")
                        .HasName("PK_KartaID");

                    b.HasIndex("RezervacijaSjedistaId");

                    b.ToTable("Karta");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.Korisnici", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ime")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("KorisnickoIme")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LozinkaHash")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LozinkaSalt")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Prezime")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("KorisnikId")
                        .HasName("PK_KorisnikID");

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.KorisniciUloge", b =>
                {
                    b.Property<int>("KorisniciUlogeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KorisniciUlogeID")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("DatumIzmjene")
                        .HasColumnType("datetime");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int?>("UlogaId")
                        .HasColumnType("int");

                    b.HasKey("KorisniciUlogeId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("UlogaId");

                    b.ToTable("KorisniciUloge");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.Notifikacije", b =>
                {
                    b.Property<int>("NotifikacijeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NotifikacijeID")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("DatumSlanja")
                        .HasColumnType("datetime");

                    b.Property<string>("Naslov")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("NovostiId")
                        .HasColumnType("int")
                        .HasColumnName("NovostiID");

                    b.Property<bool?>("Procitano")
                        .HasColumnType("bit");

                    b.HasKey("NotifikacijeId");

                    b.HasIndex("NovostiId");

                    b.ToTable("Notifikacije");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.Novosti", b =>
                {
                    b.Property<int>("NovostiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NovostiID")
                        .UseIdentityColumn();

                    b.Property<int?>("BrojPregleda")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DatumObjave")
                        .HasColumnType("datetime");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<string>("Naslov")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Sadrzaj")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("NovostiId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Novosti");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.Ocjena", b =>
                {
                    b.Property<int>("OcjenaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OcjenaID")
                        .UseIdentityColumn();

                    b.Property<string>("Komentar")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Ocjena1")
                        .HasColumnType("int")
                        .HasColumnName("Ocjena");

                    b.Property<int?>("PutnikId")
                        .HasColumnType("int")
                        .HasColumnName("PutnikID");

                    b.Property<int?>("RedVoznjeId")
                        .HasColumnType("int")
                        .HasColumnName("RedVoznjeID");

                    b.HasKey("OcjenaId");

                    b.HasIndex("PutnikId");

                    b.HasIndex("RedVoznjeId");

                    b.ToTable("Ocjena");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.Putnik", b =>
                {
                    b.Property<int>("PutnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PutnikID")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("DatumRegistracije")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DatumRodjenja")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ime")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("KorisnickoIme")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LozinkaHash")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LozinkaSalt")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Prezime")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("PutnikId");

                    b.ToTable("Putnik");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.PutnikNotifikacije", b =>
                {
                    b.Property<int>("PutnikNotifikacijeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PutnikNotifikacijeID")
                        .UseIdentityColumn();

                    b.Property<int?>("NotifikacijeId")
                        .HasColumnType("int")
                        .HasColumnName("NotifikacijeID");

                    b.Property<bool?>("Procitano")
                        .HasColumnType("bit");

                    b.Property<int?>("PutnikId")
                        .HasColumnType("int")
                        .HasColumnName("PutnikID");

                    b.HasKey("PutnikNotifikacijeId");

                    b.HasIndex("NotifikacijeId");

                    b.HasIndex("PutnikId");

                    b.ToTable("PutnikNotifikacije");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.RedVoznje", b =>
                {
                    b.Property<int?>("RedVoznjeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RedVoznjeID")
                        .UseIdentityColumn();

                    b.Property<int?>("AutobusId")
                        .HasColumnType("int")
                        .HasColumnName("AutobusID");

                    b.Property<decimal?>("Cijena")
                        .HasColumnType("decimal(18,0)");

                    b.Property<DateTime?>("DatumVrijemeDolaska")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DatumVrijemePolaska")
                        .HasColumnType("datetime");

                    b.Property<int?>("GradDolaskaId")
                        .HasColumnType("int")
                        .HasColumnName("GradDolaskaID");

                    b.Property<int?>("GradPolaskaId")
                        .HasColumnType("int")
                        .HasColumnName("GradPolaskaID");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<string>("Naziv")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("RedVoznjeId");

                    b.HasIndex("AutobusId");

                    b.HasIndex("GradDolaskaId");

                    b.HasIndex("GradPolaskaId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("RedVoznje");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.RezervacijaKarte", b =>
                {
                    b.Property<int>("RezervacijaKarteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RezervacijaKarteID")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("DatumIsteka")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DatumKreiranja")
                        .HasColumnType("datetime");

                    b.Property<int?>("KartaId")
                        .HasColumnType("int")
                        .HasColumnName("KartaID");

                    b.Property<bool?>("Otkazana")
                        .HasColumnType("bit");

                    b.Property<int?>("PutnikId")
                        .HasColumnType("int")
                        .HasColumnName("PutnikID");

                    b.Property<string>("Qrcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("VrstaKartaVrstaKarteId")
                        .HasColumnType("int");

                    b.HasKey("RezervacijaKarteId");

                    b.HasIndex("KartaId");

                    b.HasIndex("PutnikId");

                    b.HasIndex("VrstaKartaVrstaKarteId");

                    b.ToTable("RezervacijaKarte");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.RezervacijaSjedistum", b =>
                {
                    b.Property<int>("RezervacijaSjedistaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RezervacijaSjedistaID")
                        .UseIdentityColumn();

                    b.Property<int?>("AutobusId")
                        .HasColumnType("int")
                        .HasColumnName("AutobusID");

                    b.Property<int?>("Kolona")
                        .HasColumnType("int");

                    b.Property<int?>("Red")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.HasKey("RezervacijaSjedistaId")
                        .HasName("PK_RezervacijaSjedistaID");

                    b.HasIndex("AutobusId");

                    b.ToTable("RezervacijaSjedista");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.Uloga", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UlogaID")
                        .UseIdentityColumn();

                    b.Property<string>("Naziv")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("UlogaId");

                    b.ToTable("Uloga");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.Vozac", b =>
                {
                    b.Property<int>("VozacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VozacID")
                        .UseIdentityColumn();

                    b.Property<string>("Ime")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Prezime")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.Property<string>("Vozacka")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("VozacId");

                    b.ToTable("Vozac");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.VrstaKarte", b =>
                {
                    b.Property<int>("VrstaKarteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VrstaKarteID")
                        .UseIdentityColumn();

                    b.Property<int?>("KartumKartaId")
                        .HasColumnType("int");

                    b.Property<string>("VrstaKarte1")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("VrstaKarte");

                    b.HasKey("VrstaKarteId");

                    b.HasIndex("KartumKartaId");

                    b.ToTable("VrstaKarte");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.Autobu", b =>
                {
                    b.HasOne("eBus.WebAPI.Database.Vozac", "Vozac")
                        .WithMany("Autobus")
                        .HasForeignKey("VozacId")
                        .HasConstraintName("FK_VozacID");

                    b.Navigation("Vozac");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.Gradovi", b =>
                {
                    b.HasOne("eBus.WebAPI.Database.Drzava", "Drzava")
                        .WithMany("Gradovis")
                        .HasForeignKey("DrzavaId")
                        .HasConstraintName("FK_DrzavaID");

                    b.Navigation("Drzava");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.Kartum", b =>
                {
                    b.HasOne("eBus.WebAPI.Database.RezervacijaSjedistum", "RezervacijaSjedista")
                        .WithMany("Karta")
                        .HasForeignKey("RezervacijaSjedistaId")
                        .HasConstraintName("FK_RezervacijaSjedistaID");

                    b.Navigation("RezervacijaSjedista");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.KorisniciUloge", b =>
                {
                    b.HasOne("eBus.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("KorisniciUloges")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK_Korisnik5Id");

                    b.HasOne("eBus.WebAPI.Database.Uloga", "Uloga")
                        .WithMany("KorisniciUloges")
                        .HasForeignKey("UlogaId")
                        .HasConstraintName("FK_UlogaId");

                    b.Navigation("Korisnik");

                    b.Navigation("Uloga");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.Notifikacije", b =>
                {
                    b.HasOne("eBus.WebAPI.Database.Novosti", "Novosti")
                        .WithMany("Notifikacijes")
                        .HasForeignKey("NovostiId")
                        .HasConstraintName("FK_Korisnik3ID");

                    b.Navigation("Novosti");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.Novosti", b =>
                {
                    b.HasOne("eBus.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("Novostis")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK_Korisnik2ID");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.Ocjena", b =>
                {
                    b.HasOne("eBus.WebAPI.Database.Putnik", "Putnik")
                        .WithMany("Ocjenas")
                        .HasForeignKey("PutnikId")
                        .HasConstraintName("FK_Putnik3ID");

                    b.HasOne("eBus.WebAPI.Database.RedVoznje", "RedVoznje")
                        .WithMany("Ocjenas")
                        .HasForeignKey("RedVoznjeId")
                        .HasConstraintName("FK_RedVoznje1ID");

                    b.Navigation("Putnik");

                    b.Navigation("RedVoznje");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.PutnikNotifikacije", b =>
                {
                    b.HasOne("eBus.WebAPI.Database.Notifikacije", "Notifikacije")
                        .WithMany("PutnikNotifikacijes")
                        .HasForeignKey("NotifikacijeId")
                        .HasConstraintName("FK_NotifikacijeID");

                    b.HasOne("eBus.WebAPI.Database.Putnik", "Putnik")
                        .WithMany("PutnikNotifikacijes")
                        .HasForeignKey("PutnikId")
                        .HasConstraintName("FK_Putnik2ID");

                    b.Navigation("Notifikacije");

                    b.Navigation("Putnik");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.RedVoznje", b =>
                {
                    b.HasOne("eBus.WebAPI.Database.Autobu", "Autobus")
                        .WithMany("RedVoznjes")
                        .HasForeignKey("AutobusId")
                        .HasConstraintName("FK_Autobus1ID");

                    b.HasOne("eBus.WebAPI.Database.Gradovi", "GradDolaskaNavigation")
                        .WithMany("RedVoznjeGradDolaskaNavigations")
                        .HasForeignKey("GradDolaskaId")
                        .HasConstraintName("FK_GradDolaskaID");

                    b.HasOne("eBus.WebAPI.Database.Gradovi", "GradPolaskaNavigation")
                        .WithMany("RedVoznjeGradPolaskaNavigations")
                        .HasForeignKey("GradPolaskaId")
                        .HasConstraintName("FK_GradPolaskaID");

                    b.HasOne("eBus.WebAPI.Database.Korisnici", "Korisnik")
                        .WithMany("RedVoznjes")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK_Korisnik1ID");

                    b.Navigation("Autobus");

                    b.Navigation("GradDolaskaNavigation");

                    b.Navigation("GradPolaskaNavigation");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.RezervacijaKarte", b =>
                {
                    b.HasOne("eBus.WebAPI.Database.Kartum", "Karta")
                        .WithMany("RezervacijaKartes")
                        .HasForeignKey("KartaId")
                        .HasConstraintName("FK_KartaID");

                    b.HasOne("eBus.WebAPI.Database.Putnik", "Putnik")
                        .WithMany("RezervacijaKartes")
                        .HasForeignKey("PutnikId")
                        .HasConstraintName("FK_Putnik1ID");

                    b.HasOne("eBus.WebAPI.Database.VrstaKarte", "VrstaKarta")
                        .WithMany("RezervacijaKartes")
                        .HasForeignKey("VrstaKartaVrstaKarteId");

                    b.Navigation("Karta");

                    b.Navigation("Putnik");

                    b.Navigation("VrstaKarta");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.RezervacijaSjedistum", b =>
                {
                    b.HasOne("eBus.WebAPI.Database.Autobu", "Autobus")
                        .WithMany("RezervacijaSjedista")
                        .HasForeignKey("AutobusId")
                        .HasConstraintName("FK_AutobusID");

                    b.Navigation("Autobus");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.VrstaKarte", b =>
                {
                    b.HasOne("eBus.WebAPI.Database.Kartum", null)
                        .WithMany("VrstaKartes")
                        .HasForeignKey("KartumKartaId");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.Autobu", b =>
                {
                    b.Navigation("RedVoznjes");

                    b.Navigation("RezervacijaSjedista");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.Drzava", b =>
                {
                    b.Navigation("Gradovis");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.Gradovi", b =>
                {
                    b.Navigation("RedVoznjeGradDolaskaNavigations");

                    b.Navigation("RedVoznjeGradPolaskaNavigations");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.Kartum", b =>
                {
                    b.Navigation("RezervacijaKartes");

                    b.Navigation("VrstaKartes");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.Korisnici", b =>
                {
                    b.Navigation("KorisniciUloges");

                    b.Navigation("Novostis");

                    b.Navigation("RedVoznjes");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.Notifikacije", b =>
                {
                    b.Navigation("PutnikNotifikacijes");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.Novosti", b =>
                {
                    b.Navigation("Notifikacijes");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.Putnik", b =>
                {
                    b.Navigation("Ocjenas");

                    b.Navigation("PutnikNotifikacijes");

                    b.Navigation("RezervacijaKartes");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.RedVoznje", b =>
                {
                    b.Navigation("Ocjenas");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.RezervacijaSjedistum", b =>
                {
                    b.Navigation("Karta");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.Uloga", b =>
                {
                    b.Navigation("KorisniciUloges");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.Vozac", b =>
                {
                    b.Navigation("Autobus");
                });

            modelBuilder.Entity("eBus.WebAPI.Database.VrstaKarte", b =>
                {
                    b.Navigation("RezervacijaKartes");
                });
#pragma warning restore 612, 618
        }
    }
}
